[{"line":2,"elements":[{"start_timestamp":"2023-04-05T05:28:42.397Z","line":5,"name":"[Positive Test] Verify successfully Create User","description":"  \"Create User\" process only one time execute, after that user already exist\"\n   value email is primary key","id":"create-user;[positive-test]-verify-successfully-create-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2659155000,"status":"passed"},"line":10,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <200> but was <400>.\n\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\n\tat com.jun.api.stepdef.createUserStepDef.sendRequestPostCreateUserWithFirstnameLastnameEmail(createUserStepDef.java:34)\n\tat âœ½.send request post create user with firstName: \"Junaedih\" , lastName: \"Alghazali\" email:\"jun_x3@gmail.com\"(file:///home/runner/work/Test-Automation-Framework-API-Web-UI/Test-Automation-Framework-API-Web-UI/src/test/resources/api/createUser.feature:11)\n","duration":272549000,"status":"failed"},"line":11,"name":"send request post create user with firstName: \"Junaedih\" , lastName: \"Alghazali\" email:\"jun_x3@gmail.com\"","match":{"arguments":[{"val":"\"Junaedih\"","offset":46},{"val":"\"Alghazali\"","offset":69},{"val":"\"jun_x3@gmail.com\"","offset":87}],"location":"com.jun.api.stepdef.createUserStepDef.sendRequestPostCreateUserWithFirstnameLastnameEmail(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":116000,"status":"skipped"},"line":12,"name":"get response code 200 OK, user already created","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeOKUserAlreadyCreated()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Positive-Test]Verify-successfully-Create-User"}]},{"start_timestamp":"2023-04-05T05:28:45.400Z","line":23,"name":"[Negative Test] Verify Can't Create User (email)","description":"","id":"create-user;[negative-test]-verify-can-t-create-user-(email);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":124556000,"status":"passed"},"line":18,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":911804000,"status":"passed"},"line":19,"name":"create user with firstName: \"Junaedih\",lastName: \"Alghazali\" email existing:\"hermawan.aan@gmail.com\" response code 400, error:\"BODY_NOT_VALID\",  detail error: \"Email already used\"","match":{"arguments":[{"val":"\"Junaedih\"","offset":28},{"val":"\"Alghazali\"","offset":49},{"val":"\"hermawan.aan@gmail.com\"","offset":76},{"val":"400","offset":115},{"val":"\"BODY_NOT_VALID\"","offset":126},{"val":"\"Email already used\"","offset":159}],"location":"com.jun.api.stepdef.createUserStepDef.sendRequestPostCreateUserWithFirstNameLastNameEmailExistingGetResponseCodeBadRequestErrorDetailError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":1233000,"status":"passed"},"line":20,"name":"get response code 400 Bad Request","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Negative-Test]Verify-Can't-Create-User-(email)"}]},{"start_timestamp":"2023-04-05T05:28:46.461Z","line":24,"name":"[Negative Test] Verify Can't Create User (email)","description":"","id":"create-user;[negative-test]-verify-can-t-create-user-(email);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":147788000,"status":"passed"},"line":18,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":157048000,"status":"passed"},"line":19,"name":"create user with firstName: \"Junaedih\",lastName: \"Alghazali\" email existing:\"\" response code 400, error:\"BODY_NOT_VALID\",  detail error: \"Path `email` is required.\"","match":{"arguments":[{"val":"\"Junaedih\"","offset":28},{"val":"\"Alghazali\"","offset":49},{"val":"\"\"","offset":76},{"val":"400","offset":93},{"val":"\"BODY_NOT_VALID\"","offset":104},{"val":"\"Path `email` is required.\"","offset":137}],"location":"com.jun.api.stepdef.createUserStepDef.sendRequestPostCreateUserWithFirstNameLastNameEmailExistingGetResponseCodeBadRequestErrorDetailError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":95000,"status":"passed"},"line":20,"name":"get response code 400 Bad Request","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Negative-Test]Verify-Can't-Create-User-(email)"}]},{"start_timestamp":"2023-04-05T05:28:46.775Z","line":25,"name":"[Negative Test] Verify Can't Create User (email)","description":"","id":"create-user;[negative-test]-verify-can-t-create-user-(email);;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":220643000,"status":"passed"},"line":18,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":197703000,"status":"passed"},"line":19,"name":"create user with firstName: \"Junaedih\",lastName: \"Alghazali\" email existing:\"hermawan.aan\" response code 400, error:\"BODY_NOT_VALID\",  detail error: \"Path `email` is invalid (hermawan.aan).\"","match":{"arguments":[{"val":"\"Junaedih\"","offset":28},{"val":"\"Alghazali\"","offset":49},{"val":"\"hermawan.aan\"","offset":76},{"val":"400","offset":105},{"val":"\"BODY_NOT_VALID\"","offset":116},{"val":"\"Path `email` is invalid (hermawan.aan).\"","offset":149}],"location":"com.jun.api.stepdef.createUserStepDef.sendRequestPostCreateUserWithFirstNameLastNameEmailExistingGetResponseCodeBadRequestErrorDetailError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":113000,"status":"passed"},"line":20,"name":"get response code 400 Bad Request","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Negative-Test]Verify-Can't-Create-User-(email)"}]},{"start_timestamp":"2023-04-05T05:28:47.207Z","line":26,"name":"[Negative Test] Verify Can't Create User (email)","description":"","id":"create-user;[negative-test]-verify-can-t-create-user-(email);;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":145018000,"status":"passed"},"line":18,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":140306000,"status":"passed"},"line":19,"name":"create user with firstName: \"Junaedih\",lastName: \"Alghazali\" email existing:\"jun\" response code 400, error:\"BODY_NOT_VALID\",  detail error: \"Path `email` is invalid (jun).\"","match":{"arguments":[{"val":"\"Junaedih\"","offset":28},{"val":"\"Alghazali\"","offset":49},{"val":"\"jun\"","offset":76},{"val":"400","offset":96},{"val":"\"BODY_NOT_VALID\"","offset":107},{"val":"\"Path `email` is invalid (jun).\"","offset":140}],"location":"com.jun.api.stepdef.createUserStepDef.sendRequestPostCreateUserWithFirstNameLastNameEmailExistingGetResponseCodeBadRequestErrorDetailError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":223000,"status":"passed"},"line":20,"name":"get response code 400 Bad Request","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Negative-Test]Verify-Can't-Create-User-(email)"}]},{"start_timestamp":"2023-04-05T05:28:47.502Z","line":37,"name":"[Negative Test] Verify Can't Create User (firstName)","description":"","id":"create-user;[negative-test]-verify-can-t-create-user-(firstname);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":215452000,"status":"passed"},"line":32,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":149675000,"status":"passed"},"line":33,"name":"create user with blank firstName: \"\", lastName: \"alghazali\" email: \"jun@gmail.com\" response code 400, error: \"BODY_NOT_VALID\",  detail error: \"Path `firstName` is required.\"","match":{"arguments":[{"val":"\"\"","offset":34},{"val":"\"alghazali\"","offset":48},{"val":"\"jun@gmail.com\"","offset":67},{"val":"400","offset":97},{"val":"\"BODY_NOT_VALID\"","offset":109},{"val":"\"Path `firstName` is required.\"","offset":142}],"location":"com.jun.api.stepdef.createUserStepDef.createUserWithInvalidFirstNameLastNameEmailResponseCodeErrorDetailError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":516000,"status":"passed"},"line":34,"name":"get response code 400 Bad Request","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Negative-Test]Verify-Can't-Create-User-(firstName)"}]},{"start_timestamp":"2023-04-05T05:28:47.885Z","line":48,"name":"[Negative Test] Verify Can't Create User (lastName)","description":"","id":"create-user;[negative-test]-verify-can-t-create-user-(lastname);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":131681000,"status":"passed"},"line":43,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":171955000,"status":"passed"},"line":44,"name":"create user with firstName: \"junaedih\", blank lastName: \"\" email: \"jun@gmail.com\" response code 400, error: \"BODY_NOT_VALID\",  detail error: \"Path `lastName` is required.\"","match":{"arguments":[{"val":"\"junaedih\"","offset":28},{"val":"\"\"","offset":56},{"val":"\"jun@gmail.com\"","offset":66},{"val":"400","offset":96},{"val":"\"BODY_NOT_VALID\"","offset":108},{"val":"\"Path `lastName` is required.\"","offset":141}],"location":"com.jun.api.stepdef.createUserStepDef.createUserWithFirstNameBlankLastNameEmailResponseCodeErrorDetailError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":103000,"status":"passed"},"line":45,"name":"get response code 400 Bad Request","match":{"location":"com.jun.api.stepdef.createUserStepDef.getResponseCodeBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@Create-User"},{"name":"@[Negative-Test]Verify-Can't-Create-User-(lastName)"}]}],"name":"Create User","description":"","id":"create-user","keyword":"Feature","uri":"file:src/test/resources/api/createUser.feature","tags":[{"name":"@Create-User","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2023-04-05T05:28:48.196Z","line":5,"name":"[Positive Test] Verify successfully Delete User","description":"","id":"delete-user;[positive-test]-verify-successfully-delete-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":149002000,"status":"passed"},"line":6,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":401771000,"status":"passed"},"line":7,"name":"send request deleted user with id: \"6428f2c742fa6b7f7b44e3c9\" get response code 204 No Content","match":{"arguments":[{"val":"\"6428f2c742fa6b7f7b44e3c9\"","offset":35},{"val":"204","offset":80}],"location":"com.jun.api.stepdef.deleteUserStepDef.sendRequestDeletedUserWithIdGetResponseCodeNoContent(java.lang.String,int)"},"keyword":"When "},{"result":{"duration":116000,"status":"passed"},"line":8,"name":"get response code 204 No Content, user already deleted","match":{"location":"com.jun.api.stepdef.deleteUserStepDef.getResponseCodeNoContentUserAlreadyDeleted()"},"keyword":"Then "}],"tags":[{"name":"@Delete-User"},{"name":"@[Positive-Test]Verify-successfully-Delete-User"}]},{"start_timestamp":"2023-04-05T05:28:48.756Z","line":18,"name":"[Positive Test] Verify successfully Delete User","description":"","id":"delete-user;[positive-test]-verify-successfully-delete-user;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1033916000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":389261000,"status":"passed"},"line":14,"name":"send request deleted user with id: \"60d0fe4f5311236168a10a03\" get response code 204 No Content","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a03\"","offset":35},{"val":"204","offset":80}],"location":"com.jun.api.stepdef.deleteUserStepDef.sendRequestDeletedUserWithIdGetResponseCodeNoContent(java.lang.String,int)"},"keyword":"When "},{"result":{"duration":96000,"status":"passed"},"line":15,"name":"get response code 204 No Content, user already deleted","match":{"location":"com.jun.api.stepdef.deleteUserStepDef.getResponseCodeNoContentUserAlreadyDeleted()"},"keyword":"Then "}],"tags":[{"name":"@Delete-User"},{"name":"@[Positive-Test]Verify-successfully-Delete-User"}]},{"start_timestamp":"2023-04-05T05:28:50.186Z","line":19,"name":"[Positive Test] Verify successfully Delete User","description":"","id":"delete-user;[positive-test]-verify-successfully-delete-user;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":114718000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":337828000,"status":"passed"},"line":14,"name":"send request deleted user with id: \"60d0fe4f5311236168a10a04\" get response code 204 No Content","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a04\"","offset":35},{"val":"204","offset":80}],"location":"com.jun.api.stepdef.deleteUserStepDef.sendRequestDeletedUserWithIdGetResponseCodeNoContent(java.lang.String,int)"},"keyword":"When "},{"result":{"duration":115000,"status":"passed"},"line":15,"name":"get response code 204 No Content, user already deleted","match":{"location":"com.jun.api.stepdef.deleteUserStepDef.getResponseCodeNoContentUserAlreadyDeleted()"},"keyword":"Then "}],"tags":[{"name":"@Delete-User"},{"name":"@[Positive-Test]Verify-successfully-Delete-User"}]},{"start_timestamp":"2023-04-05T05:28:50.645Z","line":20,"name":"[Positive Test] Verify successfully Delete User","description":"","id":"delete-user;[positive-test]-verify-successfully-delete-user;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":115777000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":412117000,"status":"passed"},"line":14,"name":"send request deleted user with id: \"60d0fe4f5311236168a10a05\" get response code 204 No Content","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a05\"","offset":35},{"val":"204","offset":80}],"location":"com.jun.api.stepdef.deleteUserStepDef.sendRequestDeletedUserWithIdGetResponseCodeNoContent(java.lang.String,int)"},"keyword":"When "},{"result":{"duration":105000,"status":"passed"},"line":15,"name":"get response code 204 No Content, user already deleted","match":{"location":"com.jun.api.stepdef.deleteUserStepDef.getResponseCodeNoContentUserAlreadyDeleted()"},"keyword":"Then "}],"tags":[{"name":"@Delete-User"},{"name":"@[Positive-Test]Verify-successfully-Delete-User"}]},{"start_timestamp":"2023-04-05T05:28:51.180Z","line":21,"name":"[Positive Test] Verify successfully Delete User","description":"","id":"delete-user;[positive-test]-verify-successfully-delete-user;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":183015000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":350334000,"status":"passed"},"line":14,"name":"send request deleted user with id: \"60d0fe4f5311236168a10a06\" get response code 204 No Content","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a06\"","offset":35},{"val":"204","offset":80}],"location":"com.jun.api.stepdef.deleteUserStepDef.sendRequestDeletedUserWithIdGetResponseCodeNoContent(java.lang.String,int)"},"keyword":"When "},{"result":{"duration":92000,"status":"passed"},"line":15,"name":"get response code 204 No Content, user already deleted","match":{"location":"com.jun.api.stepdef.deleteUserStepDef.getResponseCodeNoContentUserAlreadyDeleted()"},"keyword":"Then "}],"tags":[{"name":"@Delete-User"},{"name":"@[Positive-Test]Verify-successfully-Delete-User"}]},{"start_timestamp":"2023-04-05T05:28:51.724Z","line":22,"name":"[Positive Test] Verify successfully Delete User","description":"","id":"delete-user;[positive-test]-verify-successfully-delete-user;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":119440000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":340706000,"status":"passed"},"line":14,"name":"send request deleted user with id: \"60d0fe4f5311236168a10a07\" get response code 204 No Content","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a07\"","offset":35},{"val":"204","offset":80}],"location":"com.jun.api.stepdef.deleteUserStepDef.sendRequestDeletedUserWithIdGetResponseCodeNoContent(java.lang.String,int)"},"keyword":"When "},{"result":{"duration":105000,"status":"passed"},"line":15,"name":"get response code 204 No Content, user already deleted","match":{"location":"com.jun.api.stepdef.deleteUserStepDef.getResponseCodeNoContentUserAlreadyDeleted()"},"keyword":"Then "}],"tags":[{"name":"@Delete-User"},{"name":"@[Positive-Test]Verify-successfully-Delete-User"}]}],"name":"Delete User","description":"","id":"delete-user","keyword":"Feature","uri":"file:src/test/resources/api/deleteUser.feature","tags":[{"name":"@Delete-User","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2023-04-05T05:28:52.194Z","line":5,"name":"[Positive Test] Verify successfully Get List of Tags","description":"","id":"get-list-of-tags;[positive-test]-verify-successfully-get-list-of-tags","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":113163000,"status":"passed"},"line":6,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":482455000,"status":"passed"},"line":7,"name":"send request get list of Tags","match":{"location":"com.jun.api.stepdef.getListOfTagsStepDef.sendRequestGetListOfTags()"},"keyword":"When "},{"result":{"duration":104000,"status":"passed"},"line":8,"name":"get response code 200 OK","match":{"location":"com.jun.api.stepdef.getListOfTagsStepDef.getResponseCodeOK()"},"keyword":"Then "}],"tags":[{"name":"@Get-List-Of-Tags"},{"name":"@[Positive-Test]-Get-List-Of-Tags"}]}],"name":"Get List of Tags","description":"","id":"get-list-of-tags","keyword":"Feature","uri":"file:src/test/resources/api/getListOfTags.feature","tags":[{"name":"@Get-List-Of-Tags","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2023-04-05T05:28:52.802Z","line":5,"name":"[Positive Test] Verify successfully Get User By ID -01","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id--01","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":153407000,"status":"passed"},"line":6,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":169970000,"status":"passed"},"line":7,"name":"send request get by ID \"60d0fe4f5311236168a10a01\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a01\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":701673000,"status":"passed"},"line":8,"name":"get response code 200 OK, ID: \"01\",  firstname: \"Jesus\" , lastname: \"Riley\"","match":{"arguments":[{"val":"\"01\"","offset":30},{"val":"\"Jesus\"","offset":48},{"val":"\"Riley\"","offset":68}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-01"}]},{"start_timestamp":"2023-04-05T05:28:53.856Z","line":12,"name":"[Positive Test] Verify successfully Get User By ID -02","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id--02","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":178249000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":162573000,"status":"passed"},"line":14,"name":"send request get by ID \"60d0fe4f5311236168a10a02\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a02\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":293299000,"status":"passed"},"line":15,"name":"get response code 200 OK, ID: \"02\",  firstname: \"Cristobal\" , lastname: \"Soler\"","match":{"arguments":[{"val":"\"02\"","offset":30},{"val":"\"Cristobal\"","offset":48},{"val":"\"Soler\"","offset":72}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-02"}]},{"start_timestamp":"2023-04-05T05:28:54.505Z","line":25,"name":"[Positive Test] Verify successfully Get User By ID (Scenario Outline)","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id-(scenario-outline);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":121161000,"status":"passed"},"line":20,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":123831000,"status":"passed"},"line":21,"name":"send request get by ID \"60d0fe4f5311236168a10a03\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a03\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":236948000,"status":"passed"},"line":22,"name":"get response code 200 OK, ID: \"03\",  firstname: \"Andri\" , lastname: \"Leclerc\"","match":{"arguments":[{"val":"\"03\"","offset":30},{"val":"\"Andri\"","offset":48},{"val":"\"Leclerc\"","offset":68}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:55.000Z","line":26,"name":"[Positive Test] Verify successfully Get User By ID (Scenario Outline)","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id-(scenario-outline);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":123325000,"status":"passed"},"line":20,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":143177000,"status":"passed"},"line":21,"name":"send request get by ID \"60d0fe4f5311236168a10a04\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a04\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":166679000,"status":"passed"},"line":22,"name":"get response code 200 OK, ID: \"04\",  firstname: \"Konsta\" , lastname: \"Manninen\"","match":{"arguments":[{"val":"\"04\"","offset":30},{"val":"\"Konsta\"","offset":48},{"val":"\"Manninen\"","offset":69}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:55.440Z","line":27,"name":"[Positive Test] Verify successfully Get User By ID (Scenario Outline)","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id-(scenario-outline);;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":254425000,"status":"passed"},"line":20,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":138700000,"status":"passed"},"line":21,"name":"send request get by ID \"60d0fe4f5311236168a10a05\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a05\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":222272000,"status":"passed"},"line":22,"name":"get response code 200 OK, ID: \"05\",  firstname: \"Ane\" , lastname: \"Frafjord\"","match":{"arguments":[{"val":"\"05\"","offset":30},{"val":"\"Ane\"","offset":48},{"val":"\"Frafjord\"","offset":66}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:56.066Z","line":28,"name":"[Positive Test] Verify successfully Get User By ID (Scenario Outline)","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id-(scenario-outline);;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":200804000,"status":"passed"},"line":20,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":180715000,"status":"passed"},"line":21,"name":"send request get by ID \"60d0fe4f5311236168a10a07\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a07\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":180765000,"status":"passed"},"line":22,"name":"get response code 200 OK, ID: \"07\",  firstname: \"Sigmund\" , lastname: \"Myran\"","match":{"arguments":[{"val":"\"07\"","offset":30},{"val":"\"Sigmund\"","offset":48},{"val":"\"Myran\"","offset":70}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:56.642Z","line":29,"name":"[Positive Test] Verify successfully Get User By ID (Scenario Outline)","description":"","id":"get-user-by-id;[positive-test]-verify-successfully-get-user-by-id-(scenario-outline);;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":130141000,"status":"passed"},"line":20,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":151070000,"status":"passed"},"line":21,"name":"send request get by ID \"60d0fe4f5311236168a10a08\"","match":{"arguments":[{"val":"\"60d0fe4f5311236168a10a08\"","offset":23}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByID(java.lang.String)"},"keyword":"When "},{"result":{"duration":170797000,"status":"passed"},"line":22,"name":"get response code 200 OK, ID: \"08\",  firstname: \"Lilja\" , lastname: \"Lampinen\"","match":{"arguments":[{"val":"\"08\"","offset":30},{"val":"\"Lilja\"","offset":48},{"val":"\"Lampinen\"","offset":68}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeSuccessfullyIDFirstnameLastname(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Positive-Test]-Verify-successfully-Get-User-By-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:57.101Z","line":33,"name":"[Negative Test] Verify can't Get User By (invalid ID 01)","description":"","id":"get-user-by-id;[negative-test]-verify-can-t-get-user-by-(invalid-id-01)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":186173000,"status":"passed"},"line":34,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":125293000,"status":"passed"},"line":35,"name":"send request get by invalid ID \"invalid ID 01\"","match":{"arguments":[{"val":"\"invalid ID 01\"","offset":31}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByInvalidID(java.lang.String)"},"keyword":"When "},{"result":{"duration":165953000,"status":"passed"},"line":36,"name":"get response code 400 Bad Request, ID: \"invalid ID 01\", error: \"PARAMS_NOT_VALID\"","match":{"arguments":[{"val":"400","offset":18},{"val":"\"invalid ID 01\"","offset":39},{"val":"\"PARAMS_NOT_VALID\"","offset":63}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeBadRequestIDError(int,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Negative-Test]-Verify-can't-Get-User-By-(invalid-ID-01)"}]},{"start_timestamp":"2023-04-05T05:28:57.585Z","line":40,"name":"[Negative Test] Verify can't Get User By (invalid ID 02)","description":"","id":"get-user-by-id;[negative-test]-verify-can-t-get-user-by-(invalid-id-02)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":151540000,"status":"passed"},"line":41,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":112972000,"status":"passed"},"line":42,"name":"send request get by invalid ID \"invalid ID 02\"","match":{"arguments":[{"val":"\"invalid ID 02\"","offset":31}],"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByInvalidID(java.lang.String)"},"keyword":"When "},{"result":{"duration":128975000,"status":"passed"},"line":43,"name":"get response code 400 Bad Request, ID: \"invalid ID 02\", error: \"PARAMS_NOT_VALID\"","match":{"arguments":[{"val":"400","offset":18},{"val":"\"invalid ID 02\"","offset":39},{"val":"\"PARAMS_NOT_VALID\"","offset":63}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeBadRequestIDError(int,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Negative-Test]-Verify-can't-Get-User-By-(invalid-ID-02)"}]},{"start_timestamp":"2023-04-05T05:28:57.993Z","line":53,"name":"[Negative Test] Verify can't Get User By invalid ID (Scenario Outline)","description":"","id":"get-user-by-id;[negative-test]-verify-can-t-get-user-by-invalid-id-(scenario-outline);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":116395000,"status":"passed"},"line":48,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":162000,"status":"passed"},"line":49,"name":"send request get by invalid ID","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByInvalidID()"},"keyword":"When "},{"result":{"duration":142339000,"status":"passed"},"line":50,"name":"get response code 400 Bad Request, ID: \"invalid ID 03\", error: \"PARAMS_NOT_VALID\"","match":{"arguments":[{"val":"400","offset":18},{"val":"\"invalid ID 03\"","offset":39},{"val":"\"PARAMS_NOT_VALID\"","offset":63}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeBadRequestIDError(int,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Negative-Test]-Verify-can't-Get-User-By-invalid-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:58.267Z","line":54,"name":"[Negative Test] Verify can't Get User By invalid ID (Scenario Outline)","description":"","id":"get-user-by-id;[negative-test]-verify-can-t-get-user-by-invalid-id-(scenario-outline);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":120156000,"status":"passed"},"line":48,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":125000,"status":"passed"},"line":49,"name":"send request get by invalid ID","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByInvalidID()"},"keyword":"When "},{"result":{"duration":141225000,"status":"passed"},"line":50,"name":"get response code 400 Bad Request, ID: \"invalid-ID-04\", error: \"PARAMS_NOT_VALID\"","match":{"arguments":[{"val":"400","offset":18},{"val":"\"invalid-ID-04\"","offset":39},{"val":"\"PARAMS_NOT_VALID\"","offset":63}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeBadRequestIDError(int,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Negative-Test]-Verify-can't-Get-User-By-invalid-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:58.537Z","line":55,"name":"[Negative Test] Verify can't Get User By invalid ID (Scenario Outline)","description":"","id":"get-user-by-id;[negative-test]-verify-can-t-get-user-by-invalid-id-(scenario-outline);;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":123833000,"status":"passed"},"line":48,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":83000,"status":"passed"},"line":49,"name":"send request get by invalid ID","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByInvalidID()"},"keyword":"When "},{"result":{"duration":32640000,"status":"passed"},"line":50,"name":"get response code 404 Bad Request, ID: \"60d0fe4f5311236168a10a30\", error: \"RESOURCE_NOT_FOUND\"","match":{"arguments":[{"val":"404","offset":18},{"val":"\"60d0fe4f5311236168a10a30\"","offset":39},{"val":"\"RESOURCE_NOT_FOUND\"","offset":74}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeBadRequestIDError(int,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Negative-Test]-Verify-can't-Get-User-By-invalid-ID-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:28:58.700Z","line":56,"name":"[Negative Test] Verify can't Get User By invalid ID (Scenario Outline)","description":"","id":"get-user-by-id;[negative-test]-verify-can-t-get-user-by-invalid-id-(scenario-outline);;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":122627000,"status":"passed"},"line":48,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":80000,"status":"passed"},"line":49,"name":"send request get by invalid ID","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.sendRequestGetByInvalidID()"},"keyword":"When "},{"result":{"duration":40158000,"status":"passed"},"line":50,"name":"get response code 404 Bad Request, ID: \"60d0fe4f5311236168a10a31\", error: \"RESOURCE_NOT_FOUND\"","match":{"arguments":[{"val":"404","offset":18},{"val":"\"60d0fe4f5311236168a10a31\"","offset":39},{"val":"\"RESOURCE_NOT_FOUND\"","offset":74}],"location":"com.jun.api.stepdef.getUserByIDStepDef.getResponseCodeBadRequestIDError(int,java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Get-User-By-ID"},{"name":"@[Negative-Test]-Verify-can't-Get-User-By-invalid-ID-(Scenario-Outline)"}]}],"name":"Get User By ID","description":"","id":"get-user-by-id","keyword":"Feature","uri":"file:src/test/resources/api/getUserbyID.feature","tags":[{"name":"@Get-User-By-ID","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2023-04-05T05:28:58.875Z","line":5,"name":"[Positive Test] Verify successfully Update User-(firstName)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(firstname)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":112014000,"status":"passed"},"line":6,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2542101000,"status":"passed"},"line":7,"name":"send request put update user with id: \"22\" , newFirstName: \"Junaedih\", get response code 200","match":{"arguments":[{"val":"\"22\"","offset":38},{"val":"\"Junaedih\"","offset":59},{"val":"200","offset":89}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewFirstNameGetResponseCode(java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":87000,"status":"passed"},"line":8,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(firstName)"}]},{"start_timestamp":"2023-04-05T05:29:01.551Z","line":18,"name":"[Positive Test] Verify successfully Update User-(firstName) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(firstname)-(scenario-outline);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":152711000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2347850000,"status":"passed"},"line":14,"name":"send request put update user with id: \"23\" , newFirstName: \"Junaedih\", get response code 200","match":{"arguments":[{"val":"\"23\"","offset":38},{"val":"\"Junaedih\"","offset":59},{"val":"200","offset":89}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewFirstNameGetResponseCode(java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":84000,"status":"passed"},"line":15,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(firstName)-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:29:04.058Z","line":19,"name":"[Positive Test] Verify successfully Update User-(firstName) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(firstname)-(scenario-outline);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":118283000,"status":"passed"},"line":13,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2321478000,"status":"passed"},"line":14,"name":"send request put update user with id: \"24\" , newFirstName: \"Prabu\", get response code 200","match":{"arguments":[{"val":"\"24\"","offset":38},{"val":"\"Prabu\"","offset":59},{"val":"200","offset":86}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewFirstNameGetResponseCode(java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":76000,"status":"passed"},"line":15,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(firstName)-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:29:06.503Z","line":24,"name":"[Positive Test] Verify successfully Update User-(lastName)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(lastname)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":223381000,"status":"passed"},"line":25,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2311354000,"status":"passed"},"line":26,"name":"send request put update user with id: \"22\" , newLastName: \"Alghazali\", get response code 200","match":{"arguments":[{"val":"\"22\"","offset":38},{"val":"\"Alghazali\"","offset":58},{"val":"200","offset":89}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewLastNameGetResponseCode(java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":76000,"status":"passed"},"line":27,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(lastName)"}]},{"start_timestamp":"2023-04-05T05:29:09.042Z","line":37,"name":"[Positive Test] Verify successfully Update User-(lastName) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(lastname)-(scenario-outline);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":119373000,"status":"passed"},"line":32,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2224381000,"status":"passed"},"line":33,"name":"send request put update user with id: \"23\" , newLastName: \"Alghazali\", get response code 200","match":{"arguments":[{"val":"\"23\"","offset":38},{"val":"\"Alghazali\"","offset":58},{"val":"200","offset":89}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewLastNameGetResponseCode(java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":83000,"status":"passed"},"line":34,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(lastName)-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:29:11.391Z","line":38,"name":"[Positive Test] Verify successfully Update User-(lastName) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(lastname)-(scenario-outline);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":115303000,"status":"passed"},"line":32,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2214948000,"status":"passed"},"line":33,"name":"send request put update user with id: \"24\" , newLastName: \"Siliwangi\", get response code 200","match":{"arguments":[{"val":"\"24\"","offset":38},{"val":"\"Siliwangi\"","offset":58},{"val":"200","offset":89}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewLastNameGetResponseCode(java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":83000,"status":"passed"},"line":34,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(lastName)-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:29:13.730Z","line":43,"name":"[Positive Test] Verify successfully Update User (firstName-and-lastName)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(firstname-and-lastname)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":161749000,"status":"passed"},"line":44,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2401412000,"status":"passed"},"line":45,"name":"send request put update user with id: \"28\" , newFirstName: \"Junaedih\", newLastName: \"Alghazali\", get response code 200","match":{"arguments":[{"val":"\"28\"","offset":38},{"val":"\"Junaedih\"","offset":59},{"val":"\"Alghazali\"","offset":84},{"val":"200","offset":115}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewFirstNameNewLastNameGetResponseCode(java.lang.String,java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":81000,"status":"passed"},"line":46,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(firstName-and-lastName)"}]},{"start_timestamp":"2023-04-05T05:29:16.299Z","line":57,"name":"[Positive Test] Verify successfully Update User (firstName-and-lastName) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(firstname-and-lastname)-(scenario-outline);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":109894000,"status":"passed"},"line":52,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2134752000,"status":"passed"},"line":53,"name":"send request put update user with id: \"11\" , newFirstName: \"Junaedih\", newLastName: \"Alghazali\", get response code 200","match":{"arguments":[{"val":"\"11\"","offset":38},{"val":"\"Junaedih\"","offset":59},{"val":"\"Alghazali\"","offset":84},{"val":"200","offset":115}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewFirstNameNewLastNameGetResponseCode(java.lang.String,java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":84000,"status":"passed"},"line":54,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(firstName-and-lastName)-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:29:18.551Z","line":58,"name":"[Positive Test] Verify successfully Update User (firstName-and-lastName) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(firstname-and-lastname)-(scenario-outline);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":116773000,"status":"passed"},"line":52,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2164437000,"status":"passed"},"line":53,"name":"send request put update user with id: \"12\" , newFirstName: \"Andika\", newLastName: \"Ramadhan\", get response code 200","match":{"arguments":[{"val":"\"12\"","offset":38},{"val":"\"Andika\"","offset":59},{"val":"\"Ramadhan\"","offset":82},{"val":"200","offset":112}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewFirstNameNewLastNameGetResponseCode(java.lang.String,java.lang.String,java.lang.String,int)"},"keyword":"When "},{"result":{"duration":89000,"status":"passed"},"line":54,"name":"get response code 200 OK, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeOKFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Positive-Test]Verify-successfully-Update-User-(firstName-and-lastName)-(Scenario-Outline)"}]},{"start_timestamp":"2023-04-05T05:29:20.838Z","line":63,"name":"[Positive Test] Verify successfully Update User-(InvalidID)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(invalidid)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":127221000,"status":"passed"},"line":64,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2156953000,"status":"passed"},"line":65,"name":"send request put update user with id: \"invalid-22\" , newLastName: \"Alghazali\", get response code 400 get message error \"PARAMS_NOT_VALID\"","match":{"arguments":[{"val":"\"invalid-22\"","offset":38},{"val":"\"Alghazali\"","offset":66},{"val":"400","offset":97},{"val":"\"PARAMS_NOT_VALID\"","offset":119}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewLastNameGetResponseCodeGetMessageError(java.lang.String,java.lang.String,int,java.lang.String)"},"keyword":"When "},{"result":{"duration":114000,"status":"passed"},"line":66,"name":"get response code 404 Not Found, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeNotFoundFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Negative-Test]Verify-can't-Update-User-(Invalid-ID)"}]},{"start_timestamp":"2023-04-05T05:29:23.129Z","line":76,"name":"[Positive Test] Verify successfully Update User-(InvalidID) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(invalidid)-(scenario-outline);;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":168140000,"status":"passed"},"line":71,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2067886000,"status":"passed"},"line":72,"name":"send request put update user with id: \"invalid-22\" , newLastName: \"Alghazali\", get response code 400 get message error \"PARAMS_NOT_VALID\"","match":{"arguments":[{"val":"\"invalid-22\"","offset":38},{"val":"\"Alghazali\"","offset":66},{"val":"400","offset":97},{"val":"\"PARAMS_NOT_VALID\"","offset":119}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewLastNameGetResponseCodeGetMessageError(java.lang.String,java.lang.String,int,java.lang.String)"},"keyword":"When "},{"result":{"duration":126000,"status":"passed"},"line":73,"name":"get response code 404 Not Found, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeNotFoundFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Negative-Test]Verify-can't-Update-User-(Invalid-ID)"}]},{"start_timestamp":"2023-04-05T05:29:25.369Z","line":77,"name":"[Positive Test] Verify successfully Update User-(InvalidID) (Scenario Outline)","description":"","id":"update-user;[positive-test]-verify-successfully-update-user-(invalidid)-(scenario-outline);;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":127242000,"status":"passed"},"line":71,"name":"url dummy-api.io can accessed","match":{"location":"com.jun.api.stepdef.getUserByIDStepDef.urlDummyapiIoCanAccessed()"},"keyword":"Given "},{"result":{"duration":2063193000,"status":"passed"},"line":72,"name":"send request put update user with id: \"30\" , newLastName: \"Alghazali\", get response code 400 get message error \"BODY_NOT_VALID\"","match":{"arguments":[{"val":"\"30\"","offset":38},{"val":"\"Alghazali\"","offset":58},{"val":"400","offset":89},{"val":"\"BODY_NOT_VALID\"","offset":111}],"location":"com.jun.api.stepdef.updateUserStepDef.sendRequestPutUpdateUserWithIdNewLastNameGetResponseCodeGetMessageError(java.lang.String,java.lang.String,int,java.lang.String)"},"keyword":"When "},{"result":{"duration":6099000,"status":"passed"},"line":73,"name":"get response code 404 Not Found, firstName already updated","match":{"location":"com.jun.api.stepdef.updateUserStepDef.getResponseCodeNotFoundFirstNameAlreadyUpdated()"},"keyword":"Then "}],"tags":[{"name":"@Update-User"},{"name":"@[Negative-Test]Verify-can't-Update-User-(Invalid-ID)"}]}],"name":"Update User","description":"","id":"update-user","keyword":"Feature","uri":"file:src/test/resources/api/updateUser.feature","tags":[{"name":"@Update-User","type":"Tag","location":{"line":1,"column":1}}]}]